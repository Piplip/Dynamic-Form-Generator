import React from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';

import { {{formName}}Schema } from './validation';
import { {{formName}}FormData } from './types';

interface {{formName}}FormProps {
  onSubmit: (data: {{formName}}FormData) => void;
  defaultValues?: {{formName}}FormData;
}

const {{formName}}Form: React.FC<{{formName}}FormProps> = ({ onSubmit, defaultValues }) => {
  const { register, handleSubmit, formState: { errors } } = useForm<{{formName}}FormData>({
    resolver: zodResolver({{formName}}Schema),
    defaultValues,
  });

  const getColSpanClass = (field) => {
    const colSpan = field.layout?.colSpan || 12; // Default to full width
    const colSpanXs = field.layout?.colSpanXs || colSpan;
    const colSpanSm = field.layout?.colSpanSm || colSpan;
    const colSpanMd = field.layout?.colSpanMd || colSpan;
    const colSpanLg = field.layout?.colSpanLg || colSpan;
    const colSpanXl = field.layout?.colSpanXl || colSpan;

    let classes = `col-span-${colSpan}`;
    if (colSpanXs) classes += ` col-span-${colSpanXs}`;
    if (colSpanSm) classes += ` sm:col-span-${colSpanSm}`;
    if (colSpanMd) classes += ` md:col-span-${colSpanMd}`;
    if (colSpanLg) classes += ` lg:col-span-${colSpanLg}`;
    if (colSpanXl) classes += ` xl:col-span-${colSpanXl}`;
    return classes;
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="grid grid-cols-12 gap-4 p-4">
      {{#each fields}}
        <div className="{{getColSpanClass this}}">
          {{#if isText}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              <input
                type="text"
                id="{{name}}"
                {...register("{{name}}")}
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              />
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isEmail}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              <input
                type="email"
                id="{{name}}"
                {...register("{{name}}")}
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              />
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isNumber}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              <input
                type="number"
                id="{{name}}"
                {...register("{{name}}", { valueAsNumber: true })}
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              />
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isSelect}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              <select
                id="{{name}}"
                {...register("{{name}}")}
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              >
                {{#each options}}
                  <option value="{{value}}">{{label}}</option>
                {{/each}}
              </select>
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isCheckbox}}
            <div className="flex items-center">
              <input
                type="checkbox"
                id="{{name}}"
                {...register("{{name}}")}
                className="mr-2"
              />
              <label htmlFor="{{name}}" className="font-medium">{{label}}</label>
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isTextarea}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              <textarea
                id="{{name}}"
                {...register("{{name}}")}
                rows="{{textareaLayout.rows}}"
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              ></textarea>
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isDate}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              <input
                type="date"
                id="{{name}}"
                {...register("{{name}}")}
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              />
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isRichText}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              {/* Rich Text Editor integration would be more complex, often requiring a wrapper component */}
              <textarea
                id="{{name}}"
                {...register("{{name}}")}
                rows="5"
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              ></textarea>
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isFile}}
            <div className="flex flex-col">
              <label htmlFor="{{name}}" className="mb-1 font-medium">{{label}}</label>
              <input
                type="file"
                id="{{name}}"
                {...register("{{name}}")}
                className="p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 w-full"
              />
              {{#if (lookup errors name)}}
                <p className="text-red-500 text-sm mt-1">{{lookup errors name.message}}</p>
              {{/if}}
            </div>
          {{/if}}
          {{#if isButton}}
            <button
              type="{{buttonType}}"
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 w-full"
            >
              {{label}}
            </button>
          {{/if}}
        </div>
      {{/each}}
      <button
        type="submit"
        className="col-span-12 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
      >
        Submit
      </button>
    </form>
  );
};

export default {{formName}}Form;
